# Each new term in the Fibonacci sequence is generated by adding
# the previous two terms.
# By starting with 1 and 2, the first 10 terms
# will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values
# do not exceed four million, find the sum of the even-valued terms.

def fib
  sum = 0
  n1 = 1
  n2 = 2
  while n1 + n2 <= 10 ** 999 do
    n3 = n1 + n2
    sum += n3 if n3.even?
    n1, n2 = n2, n3
  end
  sum
end

def fib_2
  array = [1, 2, 3]
  while array[-2] + array[-1] <= 10 ** 999 do
    array << array[-2] + array[-1]
  end
  array.select { |i| i.even? }.reduce(:+)
end

def nick
  arr = [1, 2]

  def add_another(arr)
    arr[-1] + arr[-2]
  end

  while arr[-1] < 10 ** 999
    arr << add_another(arr)
  end

  arr = arr[0..-2].select { |num| num.even? }
  sum = arr.reduce(:+)
end


class Bench
  def self.first
    Benchmark.bm do |x|
      x.report {
        fib
      }
    end
  end


  def self.second
    Benchmark.bm do |x|
      x.report {
        fib_2
      }
    end
  end

  def self.third
    Benchmark.bm do |x|
      x.report {
        nick
      }
    end
  end
end
